[{"/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/index.js":"1","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/App.js":"2","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Cards.js":"3","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/CountrySelector.js":"4","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Chart.js":"5","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Api.js":"6","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Footer.js":"7"},{"size":145,"mtime":1607081533594,"results":"8","hashOfConfig":"9"},{"size":1225,"mtime":1607166464728,"results":"10","hashOfConfig":"9"},{"size":2644,"mtime":1607165327283,"results":"11","hashOfConfig":"9"},{"size":1180,"mtime":1607081533594,"results":"12","hashOfConfig":"9"},{"size":2149,"mtime":1607165738732,"results":"13","hashOfConfig":"9"},{"size":814,"mtime":1607165329199,"results":"14","hashOfConfig":"9"},{"size":181,"mtime":1607166427215,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1axru1k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/index.js",[],["33","34"],"/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/App.js",["35"],"import React, {useEffect, useState} from 'react';\nimport Cards from './components/Cards';\nimport CountrySelector from './components/CountrySelector';\nimport Chart from './components/Chart';\nimport Footer from './components/Footer';\nimport { fetchData } from './components/Api';\n\nimport './App.css';\n\nexport default function App() {\n    const [globalData, setGlobalData] = useState({});\n    const [selectedCountry, setCountry] = useState('');\n    useEffect(() => {\n        const getData = async() => {\n            const {confirmed, deaths, recovered, lastUpdate} = await fetchData();\n            setGlobalData({confirmed, deaths, recovered, lastUpdate});\n        }\n        getData();\n    },[setGlobalData]);\n\n    let handleCountry = async(country) => {\n        const {confirmed, deaths, recovered, lastUpdate} = await fetchData(country);\n        setGlobalData({confirmed, deaths, recovered, lastUpdate });\n        setCountry(country);\n    }\n\n    return (\n        <div className='container'>\n            <h1 className='heading1'>COVID-19 Tracker</h1>\n            <Cards data={globalData}/>\n            <CountrySelector data={handleCountry}/>\n            <Chart data={globalData}/>\n            <Footer />\n        </div>\n    )\n}\n","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Cards.js",[],"/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/CountrySelector.js",[],"/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Chart.js",["36"],"import React, { useState, useEffect } from 'react';\nimport { fetchDialy } from './Api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport './Components.css';\n\n\n\nexport default function Chart({data : {confirmed, deaths, recovered}}) {\n    const [daily, setDaily] = useState([]);\n    useEffect(() => {\n        const newFunc = async() =>{\n            const dataDaily = await fetchDialy();\n            setDaily(dataDaily);\n            // console.log(confirmed.value)\n        }\n        newFunc()\n    },[daily]);\n\n    // const lineChart = (\n    //     daily.length !== 0 ?\n    //     (<Line \n    //         data = {{\n    //             labels : daily.map(({date}) => date),\n    //             datasets : [{\n    //                 data : daily.map(({confirmed}) => confirmed),\n    //                 label : 'Infected',\n    //                 borderColor : '#3333ff',\n    //                 fill : true,\n    //             },{\n    //                 data : daily.map(({deaths}) => deaths),\n    //                 label : 'Deaths',\n    //                 borderColor : 'red',\n    //                 backgroundColor : 'rgba(255,0,0,0.5)',\n    //                 fill : true,\n    //             }]\n    //         }}\n    //     />) : null\n    // );\n\n\n    const barChart = (\n        typeof(confirmed) !== 'undefined' ? (\n            <Bar \n                data = {{\n                    labels : ['Infected', 'Recovered', 'Deaths'],\n                    datasets : [{\n                        label : 'People',\n                        backgroundColor : [\n                            'rgba(0,0,255,0.5)',\n                            'rgba(0,255,0,0.5)',\n                            'rgba(255,0,0,0.5)'\n                        ],\n                    data : [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend : {display : false},\n                    title : { display : true, text:'Current State'},\n                }}\n            />\n        ) : null\n    )\n             \n    return (\n        <div className = 'chartContainer'>\n            {barChart}\n        </div>\n    )\n}\n","/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Api.js",[],"/home/imad/Development/Bootcamp/Bootcamp-Projects/tracker/src/components/Footer.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":12,"column":12,"nodeType":"43","messageId":"44","endLine":12,"endColumn":27},{"ruleId":"41","severity":1,"message":"45","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":14},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'selectedCountry' is assigned a value but never used.","Identifier","unusedVar","'Line' is defined but never used.","no-global-assign","no-unsafe-negation"]